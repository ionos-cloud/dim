# This release process looks for ndcli tags and produces releases
# build on the version number.
name: release_ndcli

on:
  push:
    tags:
      - 'ndcli-*'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: oraclelinux:9
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Activate CRB for dependencies
        run: /bin/dnf config-manager --enable ol9_codeready_builder
      - name: Add DIM repository from OBS for dimclient
        run: /bin/dnf config-manager --add-repo https://download.opensuse.org/repositories/home:/zeromind:/dim/RockyLinux_9/home:zeromind:dim.repo
        working-directory: /etc/yum.repos.d
      - name: Install dependencies
        run: /bin/dnf install --assumeyes python3-sphinx python3-dns python3-dimclient
      - run: 'echo "version=${_REF#*-}" >> $GITHUB_OUTPUT'
        id: version
        shell: bash
        env:
          _REF: ${{ github.ref }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: python3 gendoc.py > gendoc.txt
        working-directory: ndcli/doc
      - run: sphinx-build -b man doc doc/_build/man
        working-directory: ndcli
      - run: tar --transform="s,^ndcli/,ndcli-${_version}/," -czf "ndcli-src-${_version}.tar.gz" ndcli
        env:
          _version: ${{ steps.version.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: ndcli-src-${{ steps.version.outputs.version }}.tar.gz
          path: ndcli-src-${{ steps.version.outputs.version }}.tar.gz

  create_release:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true

      - uses: actions/download-artifact@v4
        with:
          name: ndcli-src-${{ needs.build.outputs.version }}.tar.gz

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ndcli-src-${{ needs.build.outputs.version }}.tar.gz
          asset_name: ndcli-src-${{ needs.build.outputs.version }}.tar.gz
          asset_content_type: application/zip
